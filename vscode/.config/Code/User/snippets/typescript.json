{
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "TypeGraphQL + TypeORM Entity": {
    "prefix": "tge",
    "body": [
      "import { Entity, PrimaryGeneratedColumn, Column, BaseEntity } from 'typeorm';",
      "import { ObjectType, Field, ID } from 'type-graphql';",
      "",
      "@ObjectType()",
      "@Entity()",
      "export class ${1:User} extends BaseEntity {",
      " @Field(() => ID)",
      " @PrimaryGeneratedColumn()",
      " id: number;",
      "",
      " @Field()",
      " @Column()",
      " ${2:firstName}: ${3:string};",
      "}"
    ],
    "description": "Entity template w/ ID field"
  }
}
